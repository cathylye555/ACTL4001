library(readxl)
library(dplyr)

# Import data
mortality_table <- read_excel("Desktop/ACTL4001/combined_data.xlsx", sheet = "mortality_table")
superlife_data <- read_excel("Desktop/ACTL4001/combined_data.xlsx", sheet = "superlife_data")
economic_data <- read_excel("Desktop/ACTL4001/combined_data.xlsx", sheet = "economic_data")
intervention_data <- read_excel("Desktop/ACTL4001/combined_data.xlsx", sheet = "intervention")

#### EDA ####
# Plot of mortality graph
plot(mortality_table$`Age`,mortality_table$`Mortality Rate`, pch=19,cex=0.3,
     xlab="Mortality Rate", 
     ylab="Age",main="Mortality Rate vs Age")

# Check how many NA's in each variable
na_count <- t(superlife_data %>% summarise(across(everything(), ~ sum(is.na(.))))) # some NA's not showing!!!
superlife_data <- superlife_data %>% mutate(across(everything(), ~ replace((.), (.)=="NA", NA) )) # Replace character NA's with NA
na_count<-t(superlife_data %>% summarise(across(everything(), ~ sum(is.na(.))))) # All NA's counted

# Replace NA's with 0's for indicator variables
superlife_data$Death.indicator[is.na(superlife_data$Death.indicator)] <- 0
superlife_data$Lapse.Indicator[is.na(superlife_data$Lapse.Indicator)] <- 0

# Investigate distribution of each variable in entire superlife data
table_function<-function(colname,data){
  colnames_list = colnames(data[-1])
  x<-which(colnames_list==colname)
  return(as.data.frame(table(data[x+1])))
} # returns a summary table

naming_function <- function(col){
  x<-table_function(colname=col, data=superlife_data)
  x <- x %>% mutate(percentage=round(100*Freq/nrow(superlife_data),2)) 
  table_name <- paste0( "distribution_",col)
  assign(table_name,x,env = .GlobalEnv )
} # assigns table name to summary table

lapply(colnames(superlife_data[-1]),naming_function) # do for all variables

## Distribution findings
# 104023 lapsed policies, 6866 "Y" for lapse indicator ?
# 874139 alive & lapsed policies
# 40376 deaths 

# Check for any duplicated policy numbers
sum(duplicated(superlife_data$Policy.number)) # none 

# Cause of death key
cause_of_death <- c("Certain infectious and parasitic diseases", 
                    "Neoplasms", 
                    "Diseases of blood, blood-forming organs, disorders involving immune mechanism",
                    "Endocrine, nutritional and metabolic diseases",
                    "Mental and behavioural disorders",
                    "Diseases of the nervous system",
                    "Diseases of the circulatory system", 
                    "Diseases of the respiratory system",
                    "Diseases of the digestive system",
                    "Diseases of the skin and subcutaneous tissue",
                    "Diseases of the musculoskeletal system and connective tissue",
                    "Diseases of the genitourinary system",
                    "Pregnancy, childbirth and the puerperium",
                    "Congenital malformations, deformations and chromosomal abnormalities",
                    "Symptoms, signs and abnormal clinical and laboratory findings, not elsewhere classified",
                    "External causes of morbidity and mortality"
                    ) 
  
cause_of_death_key <- cbind(as.vector(distribution_Cause.of.Death$Cause.of.Death),cause_of_death) # Key

distribution_Cause.of.Death <- cbind(distribution_Cause.of.Death,cause_of_death_key) # Key added onto distribution

#### Death data EDA for incentives ####
superlife_death_data <- superlife_data %>% filter(Death.indicator==1)
superlife_death_data <- superlife_death_data %>% 
  mutate(Death.age = Issue.age + (as.numeric(Year.of.Death)- Issue.year)) %>% # add age of death column
  mutate(check = (Death.age - Issue.age)>=0 ) # check age of death >= issue age

sum(superlife_death_data$check) == nrow(superlife_death_data) # check is all true

# Create distributions for all variables
naming_function_death <- function(col){
  x<-table_function_all(colname=col,data=superlife_death_data)
  x <- x %>% mutate(percentage=round(100*Freq/nrow(superlife_death_data),2)) # add % column
  table_name <- paste0( "death_distribution_",col)
  assign(table_name,x,env = .GlobalEnv )
} # assigns table name to summary table

lapply(colnames(superlife_death_data[-1]), naming_function_death) 

# Age 61 is most frequent death age
death_distribution_Death.age$Death.age[which.max(death_distribution_Death.age$Freq)]

hist(superlife_death_data$Death.age, breaks = 50) # Graph of death ages

# Cause of death
death_distribution_Cause.of.Death <- left_join(death_distribution_Cause.of.Death,as.data.frame(cause_of_death_key),
          join_by('Cause.of.Death' == 'V1'),keep=NULL)

sum(is.na(superlife_death_data$Cause.of.Death)) # 836 NA's (2.1%)

  # Investigate cause of death for smokers:
superlife_death_data %>% filter(Smoker.Status=="S") %>% 
  group_by(Cause.of.Death) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n))

# Investigate cause of sex for smokers:
superlife_death_data %>% filter(Smoker.Status=="S") %>% 
  group_by(Sex) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n))

  # Investigate urban/rural for smokers:
superlife_death_data %>% filter(Smoker.Status=="S") %>% 
  group_by(Urban.vs.Rural) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n)) # 75% of smokers that died are male

superlife_data %>% filter(Smoker.Status=="S") %>% 
  group_by(Urban.vs.Rural) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n)) # 63% of smokers are male

  # Investigate cause of death for males:
superlife_death_data %>% filter(Sex=="M") %>% 
  group_by(Cause.of.Death) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n))

  # Investigate who dies from circulatory diseases
superlife_death_data %>% filter(Cause.of.Death=="I00-I99") %>% 
  group_by(Sex) %>% summarise(n=n()) %>% mutate(percent=100*n/sum(n)) # males 75%, not too surprising as 70% deaths were male


#### Base assumptions
mean(superlife_data$Issue.age)


